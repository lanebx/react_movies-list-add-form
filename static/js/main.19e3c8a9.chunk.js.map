{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","imdbId","NewMovie","state","handleCHange","event","target","name","value","setState","clearForm","handleSubmit","preventDefault","props","addMovie","onSubmit","this","placeholder","onChange","type","Component","App","moviesFromServer","newMovie","React","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.19e3c8a9.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = Movie;\n\nexport const MovieCard: React.FC<Props> = ({\n  title, description, imgUrl, imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n","import { Component } from 'react';\n\ntype Props = {\n  addMovie (\n    title: string,\n    description: string,\n    imdbId: string,\n    imdbUrl: string,\n    imgUrl: string,\n  ): void;\n};\n\ntype State = {\n  title?: string,\n  description?: string,\n  imgUrl?: string,\n  imdbUrl?: string,\n  imdbId?: string,\n};\n\nexport class NewMovie extends Component<Props, State> {\n  state: State = {\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n  };\n\n  handleCHange = (\n    event: React.ChangeEvent<HTMLInputElement>\n    | React.ChangeEvent<HTMLTextAreaElement>,\n  ) => {\n    const { name, value } = event.target;\n\n    this.setState({ [name]: value });\n  };\n\n  clearForm = () => {\n    this.setState({\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n    });\n  };\n\n  handleSubmit = (event: React.ChangeEvent<HTMLFormElement>) => {\n    const {\n      title,\n      description,\n      imdbId,\n      imdbUrl,\n      imgUrl,\n    } = this.state;\n\n    event.preventDefault();\n    if (title && description && imdbId && imdbUrl && imgUrl) {\n      this.props.addMovie(title, description, imdbId, imdbUrl, imgUrl);\n    }\n\n    this.clearForm();\n  };\n\n  render() {\n    return (\n      <form\n        className=\"NewMovie\"\n        onSubmit={this.handleSubmit}\n      >\n        <div>\n          title\n        </div>\n        <input\n          className=\"NewMovie__title\"\n          name=\"title\"\n          placeholder=\"title\"\n          value={this.state.title}\n          onChange={this.handleCHange}\n        />\n\n        <div>\n          description\n        </div>\n        <textarea\n          name=\"description\"\n          placeholder=\"description\"\n          value={this.state.description}\n          onChange={this.handleCHange}\n          className=\"NewMovie__description\"\n        />\n\n        <div>\n          imgUrl\n        </div>\n        <input\n          name=\"imgUrl\"\n          placeholder=\"imgUrl\"\n          value={this.state.imgUrl}\n          onChange={this.handleCHange}\n          className=\"NewMovie__imgUrl\"\n        />\n\n        <div>\n          imdbUrl\n        </div>\n        <input\n          name=\"imdbUrl\"\n          placeholder=\"imdbUrl\"\n          value={this.state.imdbUrl}\n          onChange={this.handleCHange}\n          className=\"NewMovie__imdbUrl\"\n        />\n\n        <div>\n          imdbId\n        </div>\n\n        <input\n          name=\"imdbId\"\n          placeholder=\"imdbId\"\n          value={this.state.imdbId}\n          onChange={this.handleCHange}\n          className=\"NewMovie__imdbId\"\n        />\n\n        <button\n          type=\"submit\"\n          className=\"NewMovie__button\"\n        >\n          Add movie\n        </button>\n      </form>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\ninterface State {\n  movies: Movie[];\n}\n\nexport class App extends React.Component<{}, State> {\n  state: State = {\n    movies: [...moviesFromServer],\n  };\n\n  addMovie = (\n    title: string,\n    description: string,\n    imgUrl: string,\n    imdbUrl: string,\n    imdbId: string,\n  ) => {\n    const newMovie = {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    };\n\n    this.setState((state) => {\n      return {\n        movies: [\n          ...state.movies,\n          newMovie,\n        ],\n      };\n    });\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie\n            addMovie={this.addMovie}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}